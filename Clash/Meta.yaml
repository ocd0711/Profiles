######### 锚点 start #######
# 策略组相关
pr: &pr { type: select, proxies: [AutoTest, HK, TW, JP, US, SG, Bypass] }

prn: &prn { type: select, proxies: [Proxy, HK, TW, JP, US, SG, Bypass] }

prn2: &prn2 { type: select, proxies: [Bypass, Proxy, HK, TW, JP, US, SG] }

prnd: &prnd { type: select, proxies: [Proxy, HK, TW, JP, US, SG] }

pre: &pre { type: select, proxies: [SG, TW, US, OTHER] }

pren: &pren { type: select, proxies: [Bypass, Proxy, HK, TW, JP, US, SG, OTHER] }

#这里是订阅更新和延迟测试相关的
p:
  &p {
    type: http,
    interval: 3600,
    health-check:
      {
        enable: true,
        url: http://cp.cloudflare.com/generate_204,
        interval: 300,
      },
  }

######### 锚点 end #######

# url 里填写自己的订阅,名称不能重复
proxy-providers:
  provider1:
    <<: *p
    url: ""

ipv6: true
allow-lan: true
mixed-port: 7890
unified-delay: false
tcp-concurrent: true
external-controller: 127.0.0.1:9090
external-ui: ui
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

geodata-mode: true
geox-url:
  geoip: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  geosite: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"

find-process-mode: strict
global-client-fingerprint: chrome

profile:
  store-selected: true

sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"
tun:
  enable: true
  stack: mixed
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-detect-interface: true

dns:
  enable: true
  listen: :1053
  ipv6: true
  enhanced-mode: redir-host
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - "*"
    - "+.lan"
    - "+.local"
  default-nameserver:
    - 223.5.5.5
    - 223.6.6.6
  nameserver:
    - https://cloudflare-dns.com/dns-query
    - https://dns.google/dns-query
  proxy-server-nameserver:
    - https://dns.alidns.com/dns-query
    - https://doh.pub/dns-query
  # fallback:
  #   "geosite:cn,private":
  #     - https://dns.alidns.com/dns-query
  #     - https://doh.pub/dns-query
  #   "geosite:geolocation-!cn":
  #     - "https://cloudflare-dns.com/dns-query"
  #     - "https://dns.google/dns-query"
  nameserver-policy:
    "geosite:cn,private":
      - https://dns.alidns.com/dns-query
      - https://doh.pub/dns-query
    "geosite:geolocation-!cn":
      - https://cloudflare-dns.com/dns-query
      - https://dns.google/dns-query

proxies:
  - name: "Bypass"
    type: direct
    udp: true
  - name: DNS_Hijack
    type: dns

proxy-groups:
  - { name: Proxy, <<: *pr }
  - { name: Final, type: select, proxies: [Proxy, Bypass] }
  - { name: FCM, <<: *prn2 }
  - { name: Steam, <<: *prn2 }
  - { name: Epic, <<: *prn2 }
  - { name: YouTube, <<: *prnd }
  - { name: Spotify, <<: *prn2 }
  - { name: Streaming, <<: *prnd }
  - { name: EmbyProxy, <<: *pre }
  - { name: Emby, <<: *pren }
  - { name: AI, <<: *prnd }
  - { name: StreamingSE, type: select, proxies: [Bypass, HK, TW] }
  - { name: Telegram, <<: *prnd }
  - { name: Paypal, <<: *prn }
  - { name: Speedtest, <<: *prn }
  - { name: Duolingo, <<: *prn2 }
  - { name: T-Mobile, <<: *prn }

  #分隔,下面是地区分组
  - {
      name: HK,
      type: url-test,
      include-all-providers: true,
      filter: "(?=.*(香港|HK|🇭🇰))^((?!(Gamer)).)*$",
    }
  - {
      name: TW,
      type: url-test,
      include-all-providers: true,
      filter: "(?=.*(台湾|TW|🇹🇼))^((?!(Gamer)).)*$",
    }
  - {
      name: JP,
      type: url-test,
      include-all-providers: true,
      filter: "(?=.*(日本|JP|🇯🇵))^((?!(Gamer)).)*$",
    }
  - {
      name: US,
      type: url-test,
      include-all-providers: true,
      filter: "(?=.*(美国|US|🇺🇸))^((?!(Gamer)).)*$",
    }
  - {
      name: SG,
      type: url-test,
      include-all-providers: true,
      filter: "(?=.*(新加坡|SG|🇸🇬))^((?!(Gamer)).)*$",
    }
  - {
      name: OTHER,
      type: url-test,
      include-all-providers: true,
      filter: "(?=.*(emby))^((?!(Gamer)).)*$",
    }
  - {
      name: AutoTest,
      type: url-test,
      include-all-providers: true,
      tolerance: 10,
      filter: "^((?!(Gamer|arm)).)*$",
    }

rules:
  - DST-PORT,53,DNS_Hijack

  - DOMAIN-SUFFIX,csl.prod.ondemandconnectivity.com,HK
  - DOMAIN-SUFFIX,hhk.prod.ondemandconnectivity.com,HK
  - DOMAIN-SUFFIX,epdg.epc.mnc000.mcc454.pub.3gppnetwork.org,HK
  - DOMAIN-SUFFIX,ss.epdg.epc.mnc000.mcc454.pub.3gppnetwork.org,HK
  - DOMAIN-SUFFIX,ss.epdg.epc.geo.mnc000.mcc454.pub.3gppnetwork.org,HK

  - DOMAIN-SUFFIX,dl.google.com,Proxy

  # 直连
  - RULE-SET,Special,Bypass

  # FCM
  - RULE-SET,FCM,FCM

  # Steam 单独分流
  - RULE-SET,Steam,Steam

  # Epic 单独分流
  - RULE-SET,Epic,Epic

  # YouTube 单独分流
  - RULE-SET,YouTube_Music,YouTube
  - RULE-SET,YouTube,YouTube

  # Spotify 单独分流
  - RULE-SET,Spotify,Spotify

  # Streaming 国际流媒体服务
  - RULE-SET,Netflix,Streaming
  - RULE-SET,Disney_Plus,Streaming
  - RULE-SET,ABC,Streaming
  - RULE-SET,Abema_TV,Streaming
  - RULE-SET,Amazon,Streaming
  - RULE-SET,Apple_Music,Bypass
  - RULE-SET,Apple_TV,Streaming
  - RULE-SET,Bahamut,Streaming
  - RULE-SET,BBC_iPlayer,Streaming
  - RULE-SET,DAZN,Streaming
  - RULE-SET,Discovery_Plus,Streaming
  - RULE-SET,encoreTVB,Streaming
  - RULE-SET,F1_TV,Streaming
  - RULE-SET,Fox_Now,Streaming
  - RULE-SET,Fox+,Streaming
  - RULE-SET,Max,Streaming
  - RULE-SET,Hulu_Japan,Streaming
  - RULE-SET,Hulu,Streaming
  - RULE-SET,Japonx,Streaming
  - RULE-SET,JOOX,Streaming
  - RULE-SET,KKBOX,Streaming
  - RULE-SET,KKTV,Streaming
  - RULE-SET,Line_TV,Streaming
  - RULE-SET,myTV_SUPER,Streaming
  - RULE-SET,Niconico,Streaming
  - RULE-SET,Pandora,Streaming
  - RULE-SET,PBS,Streaming
  - RULE-SET,Pornhub,Streaming
  - RULE-SET,Soundcloud,Streaming
  - RULE-SET,ViuTV,Streaming

  # Emby 流媒体
  - RULE-SET,Emby-Proxy,EmbyProxy
  - RULE-SET,Emby-Direct,Bypass
  - RULE-SET,Emby,Emby

  # AI
  - RULE-SET,AI_Suite,AI

  # StreamingSE 中国流媒体服务 (面向海外版本)
  - RULE-SET,Bilibili,StreamingSE
  - RULE-SET,IQ,StreamingSE
  - RULE-SET,IQIYI,StreamingSE
  - RULE-SET,Letv,StreamingSE
  - RULE-SET,MOO,StreamingSE
  - RULE-SET,Netease_Music,StreamingSE
  - RULE-SET,Tencent_Video,StreamingSE
  - RULE-SET,Youku,StreamingSE
  - RULE-SET,WeTV,StreamingSE

  # Telegram 加速
  - RULE-SET,Telegram,Telegram

  # Paypal 加速
  - RULE-SET,PayPal,Paypal

  # Speedtest 分流
  - RULE-SET,Speedtest,Speedtest

  # Duolingo 分流
  - RULE-SET,Duolingo,Duolingo

  # Apple 服务
  - RULE-SET,Apple,Bypass

  # T-Mobile 分流
  - DOMAIN-SUFFIX,t-mobile.com,T-Mobile

  # Global 全球加速
  - RULE-SET,Global,Proxy

  # China 中国直连
  - RULE-SET,Domestic,Bypass
  - RULE-SET,Domestic_IPs,Bypass

  # Local Area Network 局域网
  - GEOIP,lan,Bypass,no-resolve

  # GeoIP China
  - GEOIP,CN,Bypass

  - MATCH,Final

rule-anchor:
  ip: &ip { type: http, interval: 86400, behavior: ipcidr, format: yaml }
  domain:
    &domain { type: http, interval: 86400, behavior: domain, format: yaml }
  classical:
    &classical {
      type: http,
      interval: 86400,
      behavior: classical,
      format: yaml,
    }
rule-providers:
  Special:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Special.yaml

  FCM:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Google%20FCM.yaml

  Steam:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Steam.yaml
  
  Epic:
    <<: *classical
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Epic/Epic.yaml

  YouTube_Music:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/YouTube%20Music.yaml

  YouTube:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/YouTube.yaml

  Spotify:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Spotify.yaml

  Netflix:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Netflix.yaml

  Disney_Plus:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Disney%20Plus.yaml

  ABC:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/ABC.yaml

  Abema_TV:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Abema%20TV.yaml

  Amazon:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Amazon.yaml

  Apple_Music:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Apple%20Music.yaml

  Apple_TV:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Apple%20TV.yaml

  Bahamut:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Bahamut.yaml

  BBC_iPlayer:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/BBC%20iPlayer.yaml

  DAZN:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/DAZN.yaml

  Discovery_Plus:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Discovery%20Plus.yaml

  encoreTVB:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/encoreTVB.yaml

  F1_TV:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/F1%20TV.yaml

  Fox_Now:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Fox%20Now.yaml

  Fox+:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Fox%2B.yaml

  Max:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Max.yaml

  Hulu_Japan:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Hulu%20Japan.yaml

  Hulu:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Hulu.yaml

  Japonx:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Japonx.yaml

  JOOX:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/JOOX.yaml

  KKBOX:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/KKBOX.yaml

  KKTV:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/KKTV.yaml

  Line_TV:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Line%20TV.yaml

  myTV_SUPER:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/myTV%20SUPER.yaml

  Niconico:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Niconico.yaml

  Pandora:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Pandora.yaml

  PBS:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/PBS.yaml

  Pornhub:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Pornhub.yaml

  Soundcloud:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Soundcloud.yaml

  ViuTV:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/ViuTV.yaml

  Emby-Proxy:
    <<: *classical
    url: https://raw.githubusercontent.com/ocd0711/Profiles/master/Clash/Ruleset/emby-proxy.yaml

  Emby-Direct:
    <<: *classical
    url: https://raw.githubusercontent.com/ocd0711/Profiles/master/Clash/Ruleset/emby-direct.yaml

  Emby:
    <<: *classical
    url: https://raw.githubusercontent.com/ocd0711/Profiles/master/Clash/Ruleset/emby.yaml

  AI_Suite:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/AI%20Suite.yaml

  Bilibili:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Bilibili.yaml

  IQ:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/IQ.yaml

  IQIYI:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/IQIYI.yaml

  Letv:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Letv.yaml

  MOO:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/MOO.yaml

  Netease_Music:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Netease%20Music.yaml

  Tencent_Video:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Tencent%20Video.yaml

  Youku:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Youku.yaml

  WeTV:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/WeTV.yaml

  Telegram:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Telegram.yaml

  PayPal:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/PayPal.yaml

  Speedtest:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Speedtest.yaml

  Duolingo:
    <<: *classical
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Duolingo/Duolingo.yaml

  Apple:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Apple.yaml

  Global:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Proxy.yaml

  Domestic:
    <<: *classical
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Domestic.yaml

  Domestic_IPs:
    <<: *ip
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Domestic%20IPs.yaml
